version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app1:
    image: app1
    build:
      context: ./MessageApp  # Build context pointing to MessageApp folder
      dockerfile: Dockerfile   # Specify Dockerfile in the MessageApp directory
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/chatdb
      SPRING_DATASOURCE_USERNAME: chatuser
      SPRING_DATASOURCE_PASSWORD: chatpass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"

  app2:
    image: app2
    build:
      context: ./MessageApp  # Same fix for app2 as well
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/chatdb
      SPRING_DATASOURCE_USERNAME: chatuser
      SPRING_DATASOURCE_PASSWORD: chatpass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"

  monitoring:
    image: monitoring
    build:
      context: ./Monitoring
      dockerfile: Dockerfile
    ports:
      - "9797:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Bind Docker socket

  controller: 
    image: controller
    build:
      context: ./Controller
      dockerfile: Dockerfile
    ports:
      - "9798:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # depends_on:
    #   - app1
    #   - app2
    #   - monitoring
  
  nginx:
    image: nginx
    ports:
      - "80:80"
    depends_on:
      - app1
      - app2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_data:
